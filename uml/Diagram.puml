@startuml
'https://plantuml.com/class-diagram

class AddItemCtrl{
-TextField itemName
-LocalDate dueDate
-TextField description

+static Stage stage
-Stage AddItemStage

+AddItemCtrl(Stage)

void submitButtonClicked(ActionEvent)
}

class AddListCtrl{
-TextField listName

+static Stage stage
-Stage AddListStage

+AddListCtrl(Stage)

void submitButtonClicked(ActionEvent)
}

class ConfirmDelCtrl{
+static Stage stage
-Stage confirmDelStage

+confirmDelCtrl(Stage)

void confirmButtonClicked(ActionEvent)
void cancelButtonClicked(ActionEvent)
}

class ListCatalogCtrl{
+static Stage stage
-Stage ListCatalogStage

-TableView tableView
-TableColumn nameColumn
-TableColumn sizeColumn

+ListCatalogCtrl(Stage)
+initialize()

void saveListButtonCLicked(ActionEvent)
void saveAllListsButtonClicked(ActionEvent)
void renameButtonClicked(ActionEvent)
void newButtonClicked(ActionEvent)
void deleteButtonClicked(ActionEvent)
void onTableItemDoubleClicked(ActionEvent)
}

class ListOptCtrl{
+static Stage stage
-Stage ListOptStage

-TextArea listName
-TableView<ToDoItem> table
-TableColumn listNames
-CheckBox completed
-TextArea itemDescription
-TextArea itemDate
-TextArea itemName

+ListOptCtrl(Stage)

-void completeBoxChecked(ActionEvent)
-void deleteButtonClicked(ActionEvent)
-void newButtonClicked(ActionEvent)
-void editButtonClicked(ActionEvent)
-void allButtonClicked(ActionEvent)
-void incompleteButtonClicked(ActionEvent)
-void completedButtonClicked(ActionEvent)
-void returnToListsButtonClicked(ActionEvent)
-void itemClicked(ActionEvent)
}

class LoadListCtrl{
+static Stage stage
-Stage LoadListStage

-TableView table
-TableColumn checkBoxes
-TableColumn listNames

+LoadListCtrl(Stage)

-void LoadListsButtonClicked(ActionEvent)
-void loadBoxChecked(ActionEvent)
}

class LoadOptCtrl{
+static Stage stage
-Stage LoadOptStage

+LoadOptCtrl(Stage)

-void loadAllListsButtonClicked(ActionEvent)
-void selectListsToLoadButtonClicked(ActionEvent)
-void memeButtonClicked(ActionEvent)
}

class ToDo{
+launch()
}

class ToDoItem{
-SimpleStringProperty name
-SimpleStringProperty description
-LocalDate date
-boolean complete

+String getName()
+void setName(String)
+String getDate()
+void setDate(LocalDate)
+String getDesc()
+void setDesc(String)
+String isComplete()
+void setComplete(String)

+ToDoItem(String, String, String)
}

class ToDoList{
-SimpleStringProperty name
-LinkedList<ToDoItem> list
-SimpleStringProperty size

+String getName()
+void setName(String)
+String getSize()
+LinkedList<ToDoItem> getList()

+ToDoList(String)

+void addItem(ToDoItem)
+void removeItem(ToDoItem)
+void editItem(ToDoItem,ToDoItem)
-void updateSize()
}

class Catalog{
-LinkedList<String> allListNames
-LinkedList<ToDoList> catalog
-int numberOfLists

+void addList(String)
+void removeList(String)
+void editListName(String, String)

+LinkedList<String> getCatalog()
-void updateSize()
+void LoadLists(ArrayList<String>)
+void addList(ToDoList)
+void deleteList(ToDoList)
+void editList(String,String)

+Catalog()
}

class StoreData{
-File storageFolder

+StoreData(File)

+void saveToMemory(ToDoList)
+void saveToMemory(Catalog)

+Catalog Catalog loadLists()
Catalog loadLists(LinkedList<String> listNames)
+LinkedList<String> loadListNames()
}

class FileHandler{
-getDirectory()
+static BufferedReader getReader(String)
+static FileWriter getWriter(String)
}

note "Utility" as 2
FileHandler .. 2
2 .. StoreData

Catalog .. ToDoList
ToDoList .. ToDoItem


note "Controllers" as 1
AddItemCtrl -> 1
AddListCtrl --> 1
ConfirmDelCtrl --> 1
LoadOptCtrl --> 1
1 <-- ListCatalogCtrl
1 <-- ListOptCtrl
1 <- LoadListCtrl

@enduml